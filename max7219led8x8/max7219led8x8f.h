/**
 * MAX7219LED8x8 - Tinusaur MAX7219 Library for LED 8x8 Matrix
 *
 * @created 2014-07-12
 * @author Neven Boyanov
 *
 * This is part of the Tinusaur/MAX7219LED8x8 project.
 *
 * Copyright (c) 2016 Neven Boyanov, Tinusaur Team. All Rights Reserved.
 * Distributed as open source software under MIT License, see LICENSE.txt file.
 * Please, as a favor, retain the link http://tinusaur.org to The Tinusaur Project.
 *
 * Source code available at: https://bitbucket.org/tinusaur/max7219led8x8
 *
 */

// ============================================================================

#ifndef MAX7219LED8X8F_H
#define MAX7219LED8X8F_H

// ----------------------------------------------------------------------------

#include <avr/pgmspace.h>

// ----------------------------------------------------------------------------

const uint8_t max7219led8x8_font[64][8] PROGMEM = {

	{	0b00000000,
		0b00000000,
		0b00000000,
		0b00000000,
		0b00000000,
		0b00000000,
		0b00000000,
		0b00000000	},	// Space
	{	0b01000000,
		0b01000000,
		0b01000000,
		0b01000000,
		0b01000000,
		0b00000000,
		0b01000000,
		0b00000000	},	// !
	{	0b01010000,
		0b01010000,
		0b00000000,
		0b00000000,
		0b00000000,
		0b00000000,
		0b00000000,
		0b00000000	},	// "
	{	0b01010000,
		0b11111000,
		0b01010000,
		0b01010000,
		0b01010000,
		0b11111000,
		0b01010000,
		0b00000000	},	// #

	// TODO: Implement those.
	{	0xaa, 0x55, 0xaa, 0x55, 0xaa, 0x55, 0xaa, 0x55	},	// $
	{	0x55, 0xaa, 0x55, 0xaa, 0x55, 0xaa, 0x55, 0xaa	},	// %
	{	0xaa, 0x55, 0xaa, 0x55, 0xaa, 0x55, 0xaa, 0x55	},	// &
	{	0x55, 0xaa, 0x55, 0xaa, 0x55, 0xaa, 0x55, 0xaa	},	// '
	{	0xaa, 0x55, 0xaa, 0x55, 0xaa, 0x55, 0xaa, 0x55	},	// (
	{	0x55, 0xaa, 0x55, 0xaa, 0x55, 0xaa, 0x55, 0xaa	},	// )
	{	0xaa, 0x55, 0xaa, 0x55, 0xaa, 0x55, 0xaa, 0x55	},	// *
	{	0x55, 0xaa, 0x55, 0xaa, 0x55, 0xaa, 0x55, 0xaa	},	// +
	{	0xaa, 0x55, 0xaa, 0x55, 0xaa, 0x55, 0xaa, 0x55	},	// ,
	{	0x55, 0xaa, 0x55, 0xaa, 0x55, 0xaa, 0x55, 0xaa	},	// -
	{	0xaa, 0x55, 0xaa, 0x55, 0xaa, 0x55, 0xaa, 0x55	},	// .
	{	0x55, 0xaa, 0x55, 0xaa, 0x55, 0xaa, 0x55, 0xaa	},	// /

	{	0b01100000,
		0b10010000,
		0b10010000,
		0b10010000,
		0b10010000,
		0b10010000,
		0b01100000,
		0b00000000	},	// 0
	{	0b01000000,
		0b11000000,
		0b01000000,
		0b01000000,
		0b01000000,
		0b01000000,
		0b11100000,
		0b00000000	},	// 1
	{	0b01100000,
		0b10010000,
		0b00010000,
		0b00100000,
		0b01000000,
		0b10000000,
		0b11110000,
		0b00000000	},	// 2
	{	0b01100000,
		0b10010000,
		0b00010000,
		0b00100000,
		0b00010000,
		0b10010000,
		0b01100000,
		0b00000000	},	// 3
	{	0b00010000,
		0b10010000,
		0b10010000,
		0b11110000,
		0b00010000,
		0b00010000,
		0b00010000,
		0b00000000	},	// 4
	{	0b11110000,
		0b10000000,
		0b10000000,
		0b11100000,
		0b00010000,
		0b10010000,
		0b01100000,
		0b00000000	},	// 5
	{	0b01100000,
		0b10010000,
		0b10000000,
		0b11100000,
		0b10010000,
		0b10010000,
		0b01100000,
		0b00000000	},	// 6
	{	0b11110000,
		0b00010000,
		0b00010000,
		0b00010000,
		0b00010000,
		0b00010000,
		0b00010000,
		0b00000000	},	// 7
	{	0b01100000,
		0b10010000,
		0b10010000,
		0b01100000,
		0b10010000,
		0b10010000,
		0b01100000,
		0b00000000	},	// 8
	{	0b01100000,
		0b10010000,
		0b10010000,
		0b01110000,
		0b00010000,
		0b10010000,
		0b01100000,
		0b00000000	},	// 9

	// TODO: Implement those.
	{	0xaa, 0x55, 0xaa, 0x55, 0xaa, 0x55, 0xaa, 0x55	},	// :
	{	0x55, 0xaa, 0x55, 0xaa, 0x55, 0xaa, 0x55, 0xaa	},	// ;
	{	0xaa, 0x55, 0xaa, 0x55, 0xaa, 0x55, 0xaa, 0x55	},	// <
	{	0x55, 0xaa, 0x55, 0xaa, 0x55, 0xaa, 0x55, 0xaa	},	// =
	{	0xaa, 0x55, 0xaa, 0x55, 0xaa, 0x55, 0xaa, 0x55	},	// >
	{	0x55, 0xaa, 0x55, 0xaa, 0x55, 0xaa, 0x55, 0xaa	},	// ?

	{	0b01110000,
		0b10001000,
		0b10111000,
		0b10101000,
		0b10111000,
		0b10000000,
		0b01110000,
		0b00000000	},	// @

	// TODO: Implement those correctly.
	{0x8,0x14,0x22,0x3E,0x22,0x22,0x22,0x22},	// A
	{0x3C,0x22,0x22,0x3E,0x22,0x22,0x3C,0x0},	// B
	{0x3C,0x40,0x40,0x40,0x40,0x40,0x3C,0x0},	// C
	{0x7C,0x42,0x42,0x42,0x42,0x42,0x7C,0x0},	// D
	{0x7C,0x40,0x40,0x7C,0x40,0x40,0x40,0x7C},	// E
	{0x7C,0x40,0x40,0x7C,0x40,0x40,0x40,0x40},	// F
	{0x3C,0x40,0x40,0x40,0x40,0x44,0x44,0x3C},	// G
	{0x44,0x44,0x44,0x7C,0x44,0x44,0x44,0x44},	// H
	{0x7C,0x10,0x10,0x10,0x10,0x10,0x10,0x7C},	// I
	{0x3C,0x08,0x08,0x08,0x08,0x08,0x48,0x30},	// J
	{0x0,0x24,0x28,0x30,0x20,0x30,0x28,0x24},	// K
	{0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x7C},	// L
	{0x81,0xC3,0xA5,0x99,0x81,0x81,0x81,0x81},	// M
	{0x0,0x42,0x62,0x52,0x4A,0x46,0x42,0x0},	// N
	{0x3C,0x42,0x42,0x42,0x42,0x42,0x42,0x3C},	// O
	{0x3C,0x22,0x22,0x22,0x3C,0x20,0x20,0x20},	// P
	{0x1C,0x22,0x22,0x22,0x22,0x26,0x22,0x1D},	// Q
	{0x3C,0x22,0x22,0x22,0x3C,0x24,0x22,0x21},	// R
	{0x0,0x1E,0x20,0x20,0x3E,0x02,0x02,0x3C},	// S
	{0x0,0x3E,0x08,0x08,0x08,0x08,0x08,0x08},	// T
	{0x42,0x42,0x42,0x42,0x42,0x42,0x22,0x1C},	// U
	{0x42,0x42,0x42,0x42,0x42,0x42,0x24,0x18},	// V

	{	0b10001000,
		0b10001000,
		0b10001000,
		0b10001000,
		0b10001000,
		0b10101000,
		0b01010000,
		0b00000000	},	// W
	{	0b10001000,
		0b10001000,
		0b01010000,
		0b00100000,
		0b01010000,
		0b10001000,
		0b10001000,
		0b00000000	},	// X
	{	0b10001000,
		0b10001000,
		0b10001000,
		0b01010000,
		0b00100000,
		0b00100000,
		0b00100000,
		0b00000000	},	// Y
	{	0b11110000,
		0b00010000,
		0b00100000,
		0b01000000,
		0b10000000,
		0b10000000,
		0b11110000,
		0b00000000	},	// Z - Test

	// TODO: Implement those.
	{	0xaa, 0x55, 0xaa, 0x55, 0xaa, 0x55, 0xaa, 0x55	},	// [
	{	0x55, 0xaa, 0x55, 0xaa, 0x55, 0xaa, 0x55, 0xaa	},	// "\"
	{	0xaa, 0x55, 0xaa, 0x55, 0xaa, 0x55, 0xaa, 0x55	},	// ]
	{	0x55, 0xaa, 0x55, 0xaa, 0x55, 0xaa, 0x55, 0xaa	},	// ^
	{	0xaa, 0x55, 0xaa, 0x55, 0xaa, 0x55, 0xaa, 0x55	},	// _

};

// ============================================================================

#endif
